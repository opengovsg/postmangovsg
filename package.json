{
  "name": "postmangovsg",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "concurrently --kill-others-on-fail -p \"[{name}]\" -n \"Backend,Frontend,Shared\" -c \"green.bold,yellow.bold,cyan.bold\" \"npm run test:backend\" \"npm run test:frontend\" \"npm run test:shared\"",
    "test:frontend": "cd frontend && npm run test",
    "test:backend": "cd backend && npm run test",
    "test:shared": "cd shared && npm run test",
    "build": "npm run build:shared && npm run build:backend && npm run build:worker && npm run build:frontend",
    "build:shared": "cd shared && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && npm run build",
    "build:worker": "cd worker && npm run build",
    "start": "cd backend && npm start",
    "predev": "npm run build:shared",
    "dev": "concurrently -k -p \"[{name}]\" -n \"Shared,Backend,Sender,Logger,Frontend\" -c \"green.bold,yellow.bold,cyan.bold,blue.bold,white.bold\" \"npm run dev:shared\" \"npm run dev:backend\" \"npm run dev:worker:sender\" \"npm run dev:worker:logger\" \"npm run dev:frontend\"",
    "dev:connectstagingdb": "concurrently  \"docker-compose up -d\" \"npm run dev:backend:stagingdbtunnel\" \"npm run dev:frontend\" \"npm run dev:backend\" \"npm run dev:shared\"",
    "dev:connectstagingdbreadonly": "concurrently  \"docker-compose up -d\" \"npm run dev:backend:stagingdbtunnelreadonly\" \"npm run dev:frontend\" \"npm run dev:backend\" \"npm run dev:shared\"",
    "dev:shared": "cd shared && npm run dev",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:backend": "cd backend && npm run dev",
    "dev:backend:stagingdbtunnel": "cd backend && npm run tunneldb:staging",
    "dev:backend:stagingdbtunnelreadonly": "cd backend && npm run tunneldb:stagingreadonly",
    "dev:worker:sender": "npm run wait:backend && cd worker && npm run dev:sender",
    "dev:worker:logger": "npm run wait:backend && cd worker && npm run dev:logger",
    "dev:localstack": "docker-compose -f docker-compose.yml up -d localstack",
    "dev:services": "docker-compose -f docker-compose.yml up",
    "postinstall": "npm run postinstall:shared && npm run postinstall:backend && npm run postinstall:worker && npm run postinstall:frontend",
    "postinstall:shared": "cd shared && npm install",
    "//postinstall:frontend": "using --legacy-peer-deps because React 18 has broken dependencies see https://github.com/opengovsg/postmangovsg/pull/1578",
    "postinstall:frontend": "cd frontend && npm install --legacy-peer-deps",
    "postinstall:backend": "cd backend && npm install",
    "postinstall:worker": "cd worker && npm install",
    "grafana": "cd backend && npm run grafana",
    "precommit": "npm run precommit:frontend && npm run precommit:backend && npm run precommit:worker && npm run precommit:shared && npm run precommit:root",
    "precommit:frontend": "cd frontend && npm run precommit",
    "precommit:backend": "cd backend && npm run precommit",
    "precommit:worker": "cd worker && npm run precommit",
    "precommit:shared": "cd shared && npm run precommit",
    "precommit:root": "lint-staged && npm run detect-secrets:precommit && sh check-env-format.sh",
    "lint-no-fix": "prettier --check '**/*.{yml,md}'",
    "lint": "prettier --write '**/*.{yml,yaml,md}' --loglevel warn",
    "wait:backend": "wait-on http-get://localhost:4000",
    "detect-secrets:update": "detect-secrets scan --baseline .secrets.baseline",
    "detect-secrets:check": "git ls-files -z | xargs -0 detect-secrets-hook --baseline .secrets.baseline",
    "detect-secrets:precommit": "git diff --staged --name-only -z | xargs -0 detect-secrets-hook --baseline .secrets.baseline",
    "cy:run": "npx cypress run",
    "prepare": "husky install"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/opengovsg/postmangovsg.git"
  },
  "author": "Open Government Products, GovTech Singapore (https://open.gov.sg)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/opengovsg/postmangovsg/issues"
  },
  "homepage": "https://github.com/opengovsg/postmangovsg#readme",
  "devDependencies": {
    "concurrently": "^7.2.1",
    "cypress": "11.1.0",
    "cypress-file-upload": "^5.0.8",
    "dotenv": "^16.0.1",
    "gmail-tester": "1.3.5",
    "husky": "^8.0.1",
    "lint-staged": "^13.0.0",
    "prettier": "^2.6.2",
    "wait-on": "^6.0.1"
  },
  "lint-staged": {
    "*.{yml,yaml,md}": "prettier --write"
  }
}
